{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PCI127\\\\Desktop\\\\TatvSoft-Training-TypeScript\\\\websocket-example\\\\webSocketClient\\\\src\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport ReactDOM from 'react-dom';\nimport { w3cwebsocket as W3cWebSocket } from 'websocket';\nimport 'antd/dist/antd.css';\nimport { Input } from 'antd';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst client = new W3cWebSocket('ws://127.0.0.1:8000');\nconst {\n  Search\n} = Input;\nexport const App = () => {\n  _s();\n\n  const [user, setUser] = useState({\n    userName: '',\n    isLoggedIn: false\n  });\n  useEffect(() => {\n    client.onopen = () => {\n      console.log('Websocket Client connected');\n    };\n\n    client.onmessage = message => {\n      const dataFromServer = JSON.parse(message.data);\n      console.log('get replay', dataFromServer);\n    };\n  });\n\n  const onButtonClicked = value => {\n    client.send(JSON.stringify({\n      type: \"message\",\n      msg: value\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => onButtonClicked('hi'),\n      children: \"Send message\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n};\n\n_s(App, \"e1B5qgSFhhTzGCEZJXt2aqmvw00=\");\n\n_c = App;\nReactDOM.render( /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 38,\n  columnNumber: 17\n}, this), document.getElementById('root'));\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/PCI127/Desktop/TatvSoft-Training-TypeScript/websocket-example/webSocketClient/src/index.js"],"names":["React","useEffect","ReactDOM","w3cwebsocket","W3cWebSocket","Input","client","Search","App","user","setUser","useState","userName","isLoggedIn","onopen","console","log","onmessage","message","dataFromServer","JSON","parse","data","onButtonClicked","value","send","stringify","type","msg","render","document","getElementById"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAASC,YAAY,IAAIC,YAAzB,QAA6C,WAA7C;AACA,OAAO,oBAAP;AACA,SAASC,KAAT,QAAsB,MAAtB;;AAEA,MAAMC,MAAM,GAAG,IAAIF,YAAJ,CAAiB,qBAAjB,CAAf;AACA,MAAM;AAAEG,EAAAA;AAAF,IAAaF,KAAnB;AAEA,OAAO,MAAMG,GAAG,GAAG,MAAM;AAAA;;AAErB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBC,QAAQ,CAAC;AAACC,IAAAA,QAAQ,EAAE,EAAX;AAAeC,IAAAA,UAAU,EAAE;AAA3B,GAAD,CAAhC;AAEAZ,EAAAA,SAAS,CAAC,MAAM;AACZK,IAAAA,MAAM,CAACQ,MAAP,GAAgB,MAAM;AAClBC,MAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ;AACH,KAFD;;AAGAV,IAAAA,MAAM,CAACW,SAAP,GAAoBC,OAAD,IAAa;AAC5B,YAAMC,cAAc,GAAGC,IAAI,CAACC,KAAL,CAAWH,OAAO,CAACI,IAAnB,CAAvB;AACAP,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BG,cAA1B;AACH,KAHD;AAIH,GARQ,CAAT;;AAUA,QAAMI,eAAe,GAAIC,KAAD,IAAW;AAC/BlB,IAAAA,MAAM,CAACmB,IAAP,CAAYL,IAAI,CAACM,SAAL,CAAe;AACvBC,MAAAA,IAAI,EAAE,SADiB;AAEvBC,MAAAA,GAAG,EAAEJ;AAFkB,KAAf,CAAZ;AAIH,GALD;;AAOA,sBACI;AAAA,2BACI;AAAQ,MAAA,OAAO,EAAE,MAAMD,eAAe,CAAC,IAAD,CAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CA1BM;;GAAMf,G;;KAAAA,G;AA4BbN,QAAQ,CAAC2B,MAAT,eAAgB,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA,QAAhB,EAAyBC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAAzB","sourcesContent":["import React, { useEffect } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { w3cwebsocket as W3cWebSocket } from 'websocket';\r\nimport 'antd/dist/antd.css';\r\nimport { Input } from 'antd';\r\n\r\nconst client = new W3cWebSocket('ws://127.0.0.1:8000');\r\nconst { Search } = Input;\r\n\r\nexport const App = () => {\r\n\r\n    const [user, setUser] = useState({userName: '', isLoggedIn: false});\r\n\r\n    useEffect(() => {\r\n        client.onopen = () => {\r\n            console.log('Websocket Client connected');\r\n        };\r\n        client.onmessage = (message) => {\r\n            const dataFromServer = JSON.parse(message.data);\r\n            console.log('get replay', dataFromServer);\r\n        };\r\n    });\r\n\r\n    const onButtonClicked = (value) => {\r\n        client.send(JSON.stringify({\r\n            type: \"message\",\r\n            msg: value\r\n        }));\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <button onClick={() => onButtonClicked('hi')}>Send message</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));"]},"metadata":{},"sourceType":"module"}