{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PCI127\\\\Desktop\\\\TatvSoft-Training-TypeScript\\\\websocket-example\\\\webSocketClient\\\\src\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport { w3cwebsocket as W3cWebSocket } from 'websocket';\nimport 'antd/dist/antd.css';\nimport { Input } from 'antd';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst client = new W3cWebSocket('ws://127.0.0.1:8000');\nconst {\n  Search\n} = Input;\nexport const App = () => {\n  _s();\n\n  const [userInfo, setUser] = useState({\n    userName: '',\n    isLoggedIn: false,\n    message: []\n  });\n  useEffect(() => {\n    client.onopen = () => {\n      console.log('Websocket Client connected');\n    };\n\n    client.onmessage = message => {\n      const dataFromServer = JSON.parse(message.data);\n      console.log('get replay', dataFromServer);\n\n      if (dataFromServer.type === 'message') {\n        setUser({\n          message: [...message, {\n            msg: dataFromServer.msg,\n            user: dataFromServer.user\n          }]\n        });\n      }\n    };\n  });\n\n  const onButtonClicked = value => {\n    client.send(JSON.stringify({\n      type: \"message\",\n      msg: value,\n      currUser: userInfo.userName\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main\",\n    children: userInfo.isLoggedIn ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => onButtonClicked('hi'),\n        children: \"Send message\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 18\n      }, this), userInfo.message.map(msg => /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"message: \", msg.msg, \", user: \", msg.user]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 47\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        padding: '200px 40px'\n      },\n      children: /*#__PURE__*/_jsxDEV(Search, {\n        placeholder: \"Enter UserName\",\n        enterButton: \"Login\",\n        size: \"Large\",\n        onSearch: value => setUser({\n          isLoggedIn: true,\n          userName: value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 19\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n};\n\n_s(App, \"pXMJpnWfMaj7+LNesXGGXQSc70M=\");\n\n_c = App;\nReactDOM.render( /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 67,\n  columnNumber: 17\n}, this), document.getElementById('root'));\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/PCI127/Desktop/TatvSoft-Training-TypeScript/websocket-example/webSocketClient/src/index.js"],"names":["React","useEffect","useState","ReactDOM","w3cwebsocket","W3cWebSocket","Input","client","Search","App","userInfo","setUser","userName","isLoggedIn","message","onopen","console","log","onmessage","dataFromServer","JSON","parse","data","type","msg","user","onButtonClicked","value","send","stringify","currUser","map","padding","render","document","getElementById"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAASC,YAAY,IAAIC,YAAzB,QAA6C,WAA7C;AACA,OAAO,oBAAP;AACA,SAASC,KAAT,QAAsB,MAAtB;;AAEA,MAAMC,MAAM,GAAG,IAAIF,YAAJ,CAAiB,qBAAjB,CAAf;AACA,MAAM;AAAEG,EAAAA;AAAF,IAAaF,KAAnB;AAEA,OAAO,MAAMG,GAAG,GAAG,MAAM;AAAA;;AAErB,QAAM,CAACC,QAAD,EAAWC,OAAX,IAAsBT,QAAQ,CAAC;AACTU,IAAAA,QAAQ,EAAE,EADD;AAETC,IAAAA,UAAU,EAAE,KAFH;AAGTC,IAAAA,OAAO,EAAE;AAHA,GAAD,CAApC;AAKAb,EAAAA,SAAS,CAAC,MAAM;AACZM,IAAAA,MAAM,CAACQ,MAAP,GAAgB,MAAM;AAClBC,MAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ;AACH,KAFD;;AAGAV,IAAAA,MAAM,CAACW,SAAP,GAAoBJ,OAAD,IAAa;AAC5B,YAAMK,cAAc,GAAGC,IAAI,CAACC,KAAL,CAAWP,OAAO,CAACQ,IAAnB,CAAvB;AACAN,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BE,cAA1B;;AACA,UAAIA,cAAc,CAACI,IAAf,KAAwB,SAA5B,EAAuC;AACnCZ,QAAAA,OAAO,CAAC;AACJG,UAAAA,OAAO,EAAE,CAAC,GAAGA,OAAJ,EACT;AACIU,YAAAA,GAAG,EAAEL,cAAc,CAACK,GADxB;AAEIC,YAAAA,IAAI,EAAEN,cAAc,CAACM;AAFzB,WADS;AADL,SAAD,CAAP;AAQH;AACJ,KAbD;AAcH,GAlBQ,CAAT;;AAoBA,QAAMC,eAAe,GAAIC,KAAD,IAAW;AAC/BpB,IAAAA,MAAM,CAACqB,IAAP,CAAYR,IAAI,CAACS,SAAL,CAAe;AACvBN,MAAAA,IAAI,EAAE,SADiB;AAEvBC,MAAAA,GAAG,EAAEG,KAFkB;AAGvBG,MAAAA,QAAQ,EAAEpB,QAAQ,CAACE;AAHI,KAAf,CAAZ;AAKH,GAND;;AAQA,sBACI;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,cAEQF,QAAQ,CAACG,UAAT,gBACA;AAAA,8BACC;AAAQ,QAAA,OAAO,EAAE,MAAMa,eAAe,CAAC,IAAD,CAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADD,EAEEhB,QAAQ,CAACI,OAAT,CAAiBiB,GAAjB,CAAqBP,GAAG,iBAAI;AAAA,gCAAaA,GAAG,CAACA,GAAjB,cAA8BA,GAAG,CAACC,IAAlC;AAAA;AAAA;AAAA;AAAA;AAAA,cAA5B,CAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,gBAKE;AAAK,MAAA,KAAK,EAAE;AAACO,QAAAA,OAAO,EAAE;AAAV,OAAZ;AAAA,6BACE,QAAC,MAAD;AACI,QAAA,WAAW,EAAG,gBADlB;AAEI,QAAA,WAAW,EAAG,OAFlB;AAGI,QAAA,IAAI,EAAG,OAHX;AAII,QAAA,QAAQ,EAAKL,KAAK,IAAIhB,OAAO,CAAC;AAACE,UAAAA,UAAU,EAAE,IAAb;AAAmBD,UAAAA,QAAQ,EAAEe;AAA7B,SAAD;AAJjC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AAPV;AAAA;AAAA;AAAA;AAAA,UADJ;AAoBH,CAvDM;;GAAMlB,G;;KAAAA,G;AAyDbN,QAAQ,CAAC8B,MAAT,eAAgB,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA,QAAhB,EAAyBC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAAzB","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { w3cwebsocket as W3cWebSocket } from 'websocket';\r\nimport 'antd/dist/antd.css';\r\nimport { Input } from 'antd';\r\n\r\nconst client = new W3cWebSocket('ws://127.0.0.1:8000');\r\nconst { Search } = Input;\r\n\r\nexport const App = () => {\r\n\r\n    const [userInfo, setUser] = useState({\r\n                                userName: '',\r\n                                isLoggedIn: false,\r\n                                message: []});\r\n\r\n    useEffect(() => {\r\n        client.onopen = () => {\r\n            console.log('Websocket Client connected');\r\n        };\r\n        client.onmessage = (message) => {\r\n            const dataFromServer = JSON.parse(message.data);\r\n            console.log('get replay', dataFromServer);\r\n            if (dataFromServer.type === 'message') {\r\n                setUser({\r\n                    message: [...message, \r\n                    {\r\n                        msg: dataFromServer.msg,\r\n                        user: dataFromServer.user\r\n                    }]\r\n                   \r\n                })\r\n            }\r\n        };\r\n    });\r\n\r\n    const onButtonClicked = (value) => {\r\n        client.send(JSON.stringify({\r\n            type: \"message\",\r\n            msg: value,\r\n            currUser: userInfo.userName\r\n        }));\r\n    }\r\n\r\n    return (\r\n        <div className=\"main\">\r\n            {\r\n                userInfo.isLoggedIn ? \r\n                <div>\r\n                 <button onClick={() => onButtonClicked('hi')}>Send message</button>\r\n                 {userInfo.message.map(msg => <p>message: {msg.msg}, user: {msg.user}</p>)}\r\n                </div>\r\n                : <div style={{padding: '200px 40px'}}>\r\n                    <Search \r\n                        placeholder = \"Enter UserName\"\r\n                        enterButton = \"Login\"\r\n                        size = \"Large\"\r\n                        onSearch = { value => setUser({isLoggedIn: true, userName: value})}\r\n                    />\r\n                </div> \r\n            }\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));"]},"metadata":{},"sourceType":"module"}